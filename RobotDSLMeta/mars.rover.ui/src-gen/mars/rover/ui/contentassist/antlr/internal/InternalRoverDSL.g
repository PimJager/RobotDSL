/*
 * generated by Xtext
 */
grammar InternalRoverDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package mars.rover.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package mars.rover.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import mars.rover.services.RoverDSLGrammarAccess;

}

@parser::members {
 
 	private RoverDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RoverDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRobot
entryRuleRobot 
:
{ before(grammarAccess.getRobotRule()); }
	 ruleRobot
{ after(grammarAccess.getRobotRule()); } 
	 EOF 
;

// Rule Robot
ruleRobot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRobotAccess().getGroup()); }
(rule__Robot__Group__0)
{ after(grammarAccess.getRobotAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBehaviorName
entryRuleBehaviorName 
:
{ before(grammarAccess.getBehaviorNameRule()); }
	 ruleBehaviorName
{ after(grammarAccess.getBehaviorNameRule()); } 
	 EOF 
;

// Rule BehaviorName
ruleBehaviorName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBehaviorNameAccess().getNameAssignment()); }
(rule__BehaviorName__NameAssignment)
{ after(grammarAccess.getBehaviorNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMotor
entryRuleMotor 
:
{ before(grammarAccess.getMotorRule()); }
	 ruleMotor
{ after(grammarAccess.getMotorRule()); } 
	 EOF 
;

// Rule Motor
ruleMotor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMotorAccess().getMAssignment()); }
(rule__Motor__MAssignment)
{ after(grammarAccess.getMotorAccess().getMAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobal
entryRuleGlobal 
:
{ before(grammarAccess.getGlobalRule()); }
	 ruleGlobal
{ after(grammarAccess.getGlobalRule()); } 
	 EOF 
;

// Rule Global
ruleGlobal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalAccess().getNameAssignment()); }
(rule__Global__NameAssignment)
{ after(grammarAccess.getGlobalAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatic
entryRuleStatic 
:
{ before(grammarAccess.getStaticRule()); }
	 ruleStatic
{ after(grammarAccess.getStaticRule()); } 
	 EOF 
;

// Rule Static
ruleStatic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticAccess().getGroup()); }
(rule__Static__Group__0)
{ after(grammarAccess.getStaticAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImplementation
entryRuleImplementation 
:
{ before(grammarAccess.getImplementationRule()); }
	 ruleImplementation
{ after(grammarAccess.getImplementationRule()); } 
	 EOF 
;

// Rule Implementation
ruleImplementation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImplementationAccess().getGroup()); }
(rule__Implementation__Group__0)
{ after(grammarAccess.getImplementationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubRoutine
entryRuleSubRoutine 
:
{ before(grammarAccess.getSubRoutineRule()); }
	 ruleSubRoutine
{ after(grammarAccess.getSubRoutineRule()); } 
	 EOF 
;

// Rule SubRoutine
ruleSubRoutine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubRoutineAccess().getGroup()); }
(rule__SubRoutine__Group__0)
{ after(grammarAccess.getSubRoutineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValExpr
entryRuleValExpr 
:
{ before(grammarAccess.getValExprRule()); }
	 ruleValExpr
{ after(grammarAccess.getValExprRule()); } 
	 EOF 
;

// Rule ValExpr
ruleValExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValExprAccess().getVExprAssignment()); }
(rule__ValExpr__VExprAssignment)
{ after(grammarAccess.getValExprAccess().getVExprAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIFExpression
entryRuleIFExpression 
:
{ before(grammarAccess.getIFExpressionRule()); }
	 ruleIFExpression
{ after(grammarAccess.getIFExpressionRule()); } 
	 EOF 
;

// Rule IFExpression
ruleIFExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIFExpressionAccess().getGroup()); }
(rule__IFExpression__Group__0)
{ after(grammarAccess.getIFExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWHILEExpression
entryRuleWHILEExpression 
:
{ before(grammarAccess.getWHILEExpressionRule()); }
	 ruleWHILEExpression
{ after(grammarAccess.getWHILEExpressionRule()); } 
	 EOF 
;

// Rule WHILEExpression
ruleWHILEExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWHILEExpressionAccess().getGroup()); }
(rule__WHILEExpression__Group__0)
{ after(grammarAccess.getWHILEExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignExpression
entryRuleAssignExpression 
:
{ before(grammarAccess.getAssignExpressionRule()); }
	 ruleAssignExpression
{ after(grammarAccess.getAssignExpressionRule()); } 
	 EOF 
;

// Rule AssignExpression
ruleAssignExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignExpressionAccess().getGroup()); }
(rule__AssignExpression__Group__0)
{ after(grammarAccess.getAssignExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getAlternatives()); }
(rule__Action__Alternatives)
{ after(grammarAccess.getActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForwardAction
entryRuleForwardAction 
:
{ before(grammarAccess.getForwardActionRule()); }
	 ruleForwardAction
{ after(grammarAccess.getForwardActionRule()); } 
	 EOF 
;

// Rule ForwardAction
ruleForwardAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForwardActionAccess().getGroup()); }
(rule__ForwardAction__Group__0)
{ after(grammarAccess.getForwardActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRotateAction
entryRuleRotateAction 
:
{ before(grammarAccess.getRotateActionRule()); }
	 ruleRotateAction
{ after(grammarAccess.getRotateActionRule()); } 
	 EOF 
;

// Rule RotateAction
ruleRotateAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRotateActionAccess().getGroup()); }
(rule__RotateAction__Group__0)
{ after(grammarAccess.getRotateActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStopAction
entryRuleStopAction 
:
{ before(grammarAccess.getStopActionRule()); }
	 ruleStopAction
{ after(grammarAccess.getStopActionRule()); } 
	 EOF 
;

// Rule StopAction
ruleStopAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStopActionAccess().getGroup()); }
(rule__StopAction__Group__0)
{ after(grammarAccess.getStopActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSAccelerationAction
entryRuleSAccelerationAction 
:
{ before(grammarAccess.getSAccelerationActionRule()); }
	 ruleSAccelerationAction
{ after(grammarAccess.getSAccelerationActionRule()); } 
	 EOF 
;

// Rule SAccelerationAction
ruleSAccelerationAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSAccelerationActionAccess().getGroup()); }
(rule__SAccelerationAction__Group__0)
{ after(grammarAccess.getSAccelerationActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSSpeedAction
entryRuleSSpeedAction 
:
{ before(grammarAccess.getSSpeedActionRule()); }
	 ruleSSpeedAction
{ after(grammarAccess.getSSpeedActionRule()); } 
	 EOF 
;

// Rule SSpeedAction
ruleSSpeedAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSSpeedActionAccess().getGroup()); }
(rule__SSpeedAction__Group__0)
{ after(grammarAccess.getSSpeedActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubRoutineAction
entryRuleSubRoutineAction 
:
{ before(grammarAccess.getSubRoutineActionRule()); }
	 ruleSubRoutineAction
{ after(grammarAccess.getSubRoutineActionRule()); } 
	 EOF 
;

// Rule SubRoutineAction
ruleSubRoutineAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubRoutineActionAccess().getGroup()); }
(rule__SubRoutineAction__Group__0)
{ after(grammarAccess.getSubRoutineActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueExpression
entryRuleValueExpression 
:
{ before(grammarAccess.getValueExpressionRule()); }
	 ruleValueExpression
{ after(grammarAccess.getValueExpressionRule()); } 
	 EOF 
;

// Rule ValueExpression
ruleValueExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueExpressionAccess().getBlevel1ParserRuleCall()); }
	ruleBlevel1
{ after(grammarAccess.getValueExpressionAccess().getBlevel1ParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlevel1
entryRuleBlevel1 
:
{ before(grammarAccess.getBlevel1Rule()); }
	 ruleBlevel1
{ after(grammarAccess.getBlevel1Rule()); } 
	 EOF 
;

// Rule Blevel1
ruleBlevel1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlevel1Access().getGroup()); }
(rule__Blevel1__Group__0)
{ after(grammarAccess.getBlevel1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlevel2
entryRuleBlevel2 
:
{ before(grammarAccess.getBlevel2Rule()); }
	 ruleBlevel2
{ after(grammarAccess.getBlevel2Rule()); } 
	 EOF 
;

// Rule Blevel2
ruleBlevel2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlevel2Access().getAlternatives()); }
(rule__Blevel2__Alternatives)
{ after(grammarAccess.getBlevel2Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBNotExpr
entryRuleBNotExpr 
:
{ before(grammarAccess.getBNotExprRule()); }
	 ruleBNotExpr
{ after(grammarAccess.getBNotExprRule()); } 
	 EOF 
;

// Rule BNotExpr
ruleBNotExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBNotExprAccess().getGroup()); }
(rule__BNotExpr__Group__0)
{ after(grammarAccess.getBNotExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlevel3
entryRuleBlevel3 
:
{ before(grammarAccess.getBlevel3Rule()); }
	 ruleBlevel3
{ after(grammarAccess.getBlevel3Rule()); } 
	 EOF 
;

// Rule Blevel3
ruleBlevel3
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlevel3Access().getGroup()); }
(rule__Blevel3__Group__0)
{ after(grammarAccess.getBlevel3Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlevel4
entryRuleBlevel4 
:
{ before(grammarAccess.getBlevel4Rule()); }
	 ruleBlevel4
{ after(grammarAccess.getBlevel4Rule()); } 
	 EOF 
;

// Rule Blevel4
ruleBlevel4
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlevel4Access().getAlternatives()); }
(rule__Blevel4__Alternatives)
{ after(grammarAccess.getBlevel4Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBVLiteral
entryRuleBVLiteral 
:
{ before(grammarAccess.getBVLiteralRule()); }
	 ruleBVLiteral
{ after(grammarAccess.getBVLiteralRule()); } 
	 EOF 
;

// Rule BVLiteral
ruleBVLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBVLiteralAccess().getGroup()); }
(rule__BVLiteral__Group__0)
{ after(grammarAccess.getBVLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBBLiteral
entryRuleBBLiteral 
:
{ before(grammarAccess.getBBLiteralRule()); }
	 ruleBBLiteral
{ after(grammarAccess.getBBLiteralRule()); } 
	 EOF 
;

// Rule BBLiteral
ruleBBLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBBLiteralAccess().getBValueAssignment()); }
(rule__BBLiteral__BValueAssignment)
{ after(grammarAccess.getBBLiteralAccess().getBValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBVarLiteral
entryRuleBVarLiteral 
:
{ before(grammarAccess.getBVarLiteralRule()); }
	 ruleBVarLiteral
{ after(grammarAccess.getBVarLiteralRule()); } 
	 EOF 
;

// Rule BVarLiteral
ruleBVarLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBVarLiteralAccess().getVarAssignment()); }
(rule__BVarLiteral__VarAssignment)
{ after(grammarAccess.getBVarLiteralAccess().getVarAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBSensorLiteral
entryRuleBSensorLiteral 
:
{ before(grammarAccess.getBSensorLiteralRule()); }
	 ruleBSensorLiteral
{ after(grammarAccess.getBSensorLiteralRule()); } 
	 EOF 
;

// Rule BSensorLiteral
ruleBSensorLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBSensorLiteralAccess().getSensorAssignment()); }
(rule__BSensorLiteral__SensorAssignment)
{ after(grammarAccess.getBSensorLiteralAccess().getSensorAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBVBracket
entryRuleBVBracket 
:
{ before(grammarAccess.getBVBracketRule()); }
	 ruleBVBracket
{ after(grammarAccess.getBVBracketRule()); } 
	 EOF 
;

// Rule BVBracket
ruleBVBracket
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBVBracketAccess().getGroup()); }
(rule__BVBracket__Group__0)
{ after(grammarAccess.getBVBracketAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Sensor
ruleSensor
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getAlternatives()); }
(rule__Sensor__Alternatives)
{ after(grammarAccess.getSensorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule EMotor
ruleEMotor
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEMotorAccess().getAlternatives()); }
(rule__EMotor__Alternatives)
{ after(grammarAccess.getEMotorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BBinaryOp
ruleBBinaryOp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBBinaryOpAccess().getAlternatives()); }
(rule__BBinaryOp__Alternatives)
{ after(grammarAccess.getBBinaryOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOp
ruleCompareOp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getAlternatives()); }
(rule__CompareOp__Alternatives)
{ after(grammarAccess.getCompareOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_0()); }
(rule__Expression__Group_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getIFExpressionParserRuleCall_1()); }
	ruleIFExpression
{ after(grammarAccess.getExpressionAccess().getIFExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getWHILEExpressionParserRuleCall_2()); }
	ruleWHILEExpression
{ after(grammarAccess.getExpressionAccess().getWHILEExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getValExprParserRuleCall_0_0_0()); }
	ruleValExpr
{ after(grammarAccess.getExpressionAccess().getValExprParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getActionParserRuleCall_0_0_1()); }
	ruleAction
{ after(grammarAccess.getExpressionAccess().getActionParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getAssignExpressionParserRuleCall_0_0_2()); }
	ruleAssignExpression
{ after(grammarAccess.getExpressionAccess().getAssignExpressionParserRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getForwardActionParserRuleCall_0()); }
	ruleForwardAction
{ after(grammarAccess.getActionAccess().getForwardActionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getRotateActionParserRuleCall_1()); }
	ruleRotateAction
{ after(grammarAccess.getActionAccess().getRotateActionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getActionAccess().getStopActionParserRuleCall_2()); }
	ruleStopAction
{ after(grammarAccess.getActionAccess().getStopActionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getActionAccess().getSAccelerationActionParserRuleCall_3()); }
	ruleSAccelerationAction
{ after(grammarAccess.getActionAccess().getSAccelerationActionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getActionAccess().getSSpeedActionParserRuleCall_4()); }
	ruleSSpeedAction
{ after(grammarAccess.getActionAccess().getSSpeedActionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getActionAccess().getSubRoutineActionParserRuleCall_5()); }
	ruleSubRoutineAction
{ after(grammarAccess.getActionAccess().getSubRoutineActionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel2__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel2Access().getBNotExprParserRuleCall_0()); }
	ruleBNotExpr
{ after(grammarAccess.getBlevel2Access().getBNotExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBlevel2Access().getBlevel3ParserRuleCall_1()); }
	ruleBlevel3
{ after(grammarAccess.getBlevel2Access().getBlevel3ParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel4__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel4Access().getBVLiteralParserRuleCall_0()); }
	ruleBVLiteral
{ after(grammarAccess.getBlevel4Access().getBVLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBlevel4Access().getBBLiteralParserRuleCall_1()); }
	ruleBBLiteral
{ after(grammarAccess.getBlevel4Access().getBBLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBlevel4Access().getBVarLiteralParserRuleCall_2()); }
	ruleBVarLiteral
{ after(grammarAccess.getBlevel4Access().getBVarLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBlevel4Access().getBSensorLiteralParserRuleCall_3()); }
	ruleBSensorLiteral
{ after(grammarAccess.getBlevel4Access().getBSensorLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getBlevel4Access().getBVBracketParserRuleCall_4()); }
	ruleBVBracket
{ after(grammarAccess.getBlevel4Access().getBVBracketParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getCOLORIDSENSOREnumLiteralDeclaration_0()); }
(	'ColorIDSensor' 
)
{ after(grammarAccess.getSensorAccess().getCOLORIDSENSOREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getSensorAccess().getLIGHTSENSOREnumLiteralDeclaration_1()); }
(	'LightSensor' 
)
{ after(grammarAccess.getSensorAccess().getLIGHTSENSOREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getSensorAccess().getULTRASONICSENSOREnumLiteralDeclaration_2()); }
(	'UltraSonicSensor' 
)
{ after(grammarAccess.getSensorAccess().getULTRASONICSENSOREnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getSensorAccess().getTOUCHSENSORLEnumLiteralDeclaration_3()); }
(	'TouchSensorL' 
)
{ after(grammarAccess.getSensorAccess().getTOUCHSENSORLEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getSensorAccess().getTOUCHSENSORREnumLiteralDeclaration_4()); }
(	'TouchSensorR' 
)
{ after(grammarAccess.getSensorAccess().getTOUCHSENSORREnumLiteralDeclaration_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EMotor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEMotorAccess().getLEFTMOTOREnumLiteralDeclaration_0()); }
(	'LeftMotor' 
)
{ after(grammarAccess.getEMotorAccess().getLEFTMOTOREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEMotorAccess().getRIGHTMOTOREnumLiteralDeclaration_1()); }
(	'RightMotor' 
)
{ after(grammarAccess.getEMotorAccess().getRIGHTMOTOREnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BBinaryOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBBinaryOpAccess().getANDEnumLiteralDeclaration_0()); }
(	'&&' 
)
{ after(grammarAccess.getBBinaryOpAccess().getANDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBBinaryOpAccess().getOREnumLiteralDeclaration_1()); }
(	'||' 
)
{ after(grammarAccess.getBBinaryOpAccess().getOREnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getEQEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getCompareOpAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getNEQEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getCompareOpAccess().getNEQEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getGEQEnumLiteralDeclaration_2()); }
(	'>=' 
)
{ after(grammarAccess.getCompareOpAccess().getGEQEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getGTEnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getCompareOpAccess().getGTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getLEQEnumLiteralDeclaration_4()); }
(	'<=' 
)
{ after(grammarAccess.getCompareOpAccess().getLEQEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getLTEnumLiteralDeclaration_5()); }
(	'<' 
)
{ after(grammarAccess.getCompareOpAccess().getLTEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Robot__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group__0__Impl
	rule__Robot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getBehaviorsKeyword_0()); }

	'Behaviors:' 

{ after(grammarAccess.getRobotAccess().getBehaviorsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group__1__Impl
	rule__Robot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRobotAccess().getBehaviorOrderAssignment_1()); }
(rule__Robot__BehaviorOrderAssignment_1)
{ after(grammarAccess.getRobotAccess().getBehaviorOrderAssignment_1()); }
)
(
{ before(grammarAccess.getRobotAccess().getBehaviorOrderAssignment_1()); }
(rule__Robot__BehaviorOrderAssignment_1)*
{ after(grammarAccess.getRobotAccess().getBehaviorOrderAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group__2__Impl
	rule__Robot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getGroup_2()); }
(rule__Robot__Group_2__0)?
{ after(grammarAccess.getRobotAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group__3__Impl
	rule__Robot__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getGroup_3()); }
(rule__Robot__Group_3__0)?
{ after(grammarAccess.getRobotAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group__4__Impl
	rule__Robot__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getStopsWhenKeyword_4()); }

	'Stops when:' 

{ after(grammarAccess.getRobotAccess().getStopsWhenKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group__5__Impl
	rule__Robot__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getStopBehaviourAssignment_5()); }
(rule__Robot__StopBehaviourAssignment_5)
{ after(grammarAccess.getRobotAccess().getStopBehaviourAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group__6__Impl
	rule__Robot__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRobotAccess().getBehaviorsAssignment_6()); }
(rule__Robot__BehaviorsAssignment_6)
{ after(grammarAccess.getRobotAccess().getBehaviorsAssignment_6()); }
)
(
{ before(grammarAccess.getRobotAccess().getBehaviorsAssignment_6()); }
(rule__Robot__BehaviorsAssignment_6)*
{ after(grammarAccess.getRobotAccess().getBehaviorsAssignment_6()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getSubRoutinesAssignment_7()); }
(rule__Robot__SubRoutinesAssignment_7)*
{ after(grammarAccess.getRobotAccess().getSubRoutinesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Robot__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group_2__0__Impl
	rule__Robot__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getVariablesKeyword_2_0()); }

	'Variables:' 

{ after(grammarAccess.getRobotAccess().getVariablesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getGlobalsAssignment_2_1()); }
(rule__Robot__GlobalsAssignment_2_1)*
{ after(grammarAccess.getRobotAccess().getGlobalsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Robot__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group_3__0__Impl
	rule__Robot__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getConstantsKeyword_3_0()); }

	'Constants:' 

{ after(grammarAccess.getRobotAccess().getConstantsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Robot__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Robot__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getStaticsAssignment_3_1()); }
(rule__Robot__StaticsAssignment_3_1)*
{ after(grammarAccess.getRobotAccess().getStaticsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Static__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Static__Group__0__Impl
	rule__Static__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Static__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccess().getNameAssignment_0()); }
(rule__Static__NameAssignment_0)
{ after(grammarAccess.getStaticAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Static__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Static__Group__1__Impl
	rule__Static__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Static__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccess().getSpaceEqualsSignSpaceKeyword_1()); }

	' = ' 

{ after(grammarAccess.getStaticAccess().getSpaceEqualsSignSpaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Static__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Static__Group__2__Impl
	rule__Static__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Static__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccess().getValueAssignment_2()); }
(rule__Static__ValueAssignment_2)
{ after(grammarAccess.getStaticAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Static__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Static__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Static__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getStaticAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Implementation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Implementation__Group__0__Impl
	rule__Implementation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getImplementationForKeyword_0()); }

	'Implementation for' 

{ after(grammarAccess.getImplementationAccess().getImplementationForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Implementation__Group__1__Impl
	rule__Implementation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getForAssignment_1()); }
(rule__Implementation__ForAssignment_1)
{ after(grammarAccess.getImplementationAccess().getForAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Implementation__Group__2__Impl
	rule__Implementation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getImplementationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Implementation__Group__3__Impl
	rule__Implementation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getTakesControlWhenKeyword_3()); }

	'Takes control when:' 

{ after(grammarAccess.getImplementationAccess().getTakesControlWhenKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Implementation__Group__4__Impl
	rule__Implementation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getControlCheckAssignment_4()); }
(rule__Implementation__ControlCheckAssignment_4)
{ after(grammarAccess.getImplementationAccess().getControlCheckAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Implementation__Group__5__Impl
	rule__Implementation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getDoesKeyword_5()); }

	'Does:' 

{ after(grammarAccess.getImplementationAccess().getDoesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Implementation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Implementation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getImplementationAccess().getExpressionsAssignment_6()); }
(rule__Implementation__ExpressionsAssignment_6)
{ after(grammarAccess.getImplementationAccess().getExpressionsAssignment_6()); }
)
(
{ before(grammarAccess.getImplementationAccess().getExpressionsAssignment_6()); }
(rule__Implementation__ExpressionsAssignment_6)*
{ after(grammarAccess.getImplementationAccess().getExpressionsAssignment_6()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SubRoutine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubRoutine__Group__0__Impl
	rule__SubRoutine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubRoutine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRoutineAccess().getRoutineKeyword_0()); }

	'Routine ' 

{ after(grammarAccess.getSubRoutineAccess().getRoutineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubRoutine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubRoutine__Group__1__Impl
	rule__SubRoutine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubRoutine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRoutineAccess().getNameAssignment_1()); }
(rule__SubRoutine__NameAssignment_1)
{ after(grammarAccess.getSubRoutineAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubRoutine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubRoutine__Group__2__Impl
	rule__SubRoutine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubRoutine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRoutineAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSubRoutineAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubRoutine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubRoutine__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubRoutine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSubRoutineAccess().getExpressionsAssignment_3()); }
(rule__SubRoutine__ExpressionsAssignment_3)
{ after(grammarAccess.getSubRoutineAccess().getExpressionsAssignment_3()); }
)
(
{ before(grammarAccess.getSubRoutineAccess().getExpressionsAssignment_3()); }
(rule__SubRoutine__ExpressionsAssignment_3)*
{ after(grammarAccess.getSubRoutineAccess().getExpressionsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__0__Impl
	rule__Expression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_0_0()); }
(rule__Expression__Alternatives_0_0)
{ after(grammarAccess.getExpressionAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSemicolonKeyword_0_1()); }

	';' 

{ after(grammarAccess.getExpressionAccess().getSemicolonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IFExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IFExpression__Group__0__Impl
	rule__IFExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getIFKeyword_0()); }

	'IF' 

{ after(grammarAccess.getIFExpressionAccess().getIFKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IFExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IFExpression__Group__1__Impl
	rule__IFExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getCAssignment_1()); }
(rule__IFExpression__CAssignment_1)
{ after(grammarAccess.getIFExpressionAccess().getCAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IFExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IFExpression__Group__2__Impl
	rule__IFExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getIFExpressionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IFExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IFExpression__Group__3__Impl
	rule__IFExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIFExpressionAccess().getTAssignment_3()); }
(rule__IFExpression__TAssignment_3)
{ after(grammarAccess.getIFExpressionAccess().getTAssignment_3()); }
)
(
{ before(grammarAccess.getIFExpressionAccess().getTAssignment_3()); }
(rule__IFExpression__TAssignment_3)*
{ after(grammarAccess.getIFExpressionAccess().getTAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IFExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IFExpression__Group__4__Impl
	rule__IFExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getIFExpressionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IFExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IFExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getGroup_5()); }
(rule__IFExpression__Group_5__0)?
{ after(grammarAccess.getIFExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IFExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IFExpression__Group_5__0__Impl
	rule__IFExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getELSEKeyword_5_0()); }

	'ELSE' 

{ after(grammarAccess.getIFExpressionAccess().getELSEKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IFExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IFExpression__Group_5__1__Impl
	rule__IFExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getLeftCurlyBracketKeyword_5_1()); }

	'{' 

{ after(grammarAccess.getIFExpressionAccess().getLeftCurlyBracketKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IFExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IFExpression__Group_5__2__Impl
	rule__IFExpression__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIFExpressionAccess().getEAssignment_5_2()); }
(rule__IFExpression__EAssignment_5_2)
{ after(grammarAccess.getIFExpressionAccess().getEAssignment_5_2()); }
)
(
{ before(grammarAccess.getIFExpressionAccess().getEAssignment_5_2()); }
(rule__IFExpression__EAssignment_5_2)*
{ after(grammarAccess.getIFExpressionAccess().getEAssignment_5_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IFExpression__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IFExpression__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getRightCurlyBracketKeyword_5_3()); }

	'}' 

{ after(grammarAccess.getIFExpressionAccess().getRightCurlyBracketKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WHILEExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WHILEExpression__Group__0__Impl
	rule__WHILEExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WHILEExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWHILEExpressionAccess().getWHILEKeyword_0()); }

	'WHILE' 

{ after(grammarAccess.getWHILEExpressionAccess().getWHILEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WHILEExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WHILEExpression__Group__1__Impl
	rule__WHILEExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WHILEExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWHILEExpressionAccess().getCAssignment_1()); }
(rule__WHILEExpression__CAssignment_1)
{ after(grammarAccess.getWHILEExpressionAccess().getCAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WHILEExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WHILEExpression__Group__2__Impl
	rule__WHILEExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WHILEExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWHILEExpressionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getWHILEExpressionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WHILEExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WHILEExpression__Group__3__Impl
	rule__WHILEExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WHILEExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWHILEExpressionAccess().getBAssignment_3()); }
(rule__WHILEExpression__BAssignment_3)
{ after(grammarAccess.getWHILEExpressionAccess().getBAssignment_3()); }
)
(
{ before(grammarAccess.getWHILEExpressionAccess().getBAssignment_3()); }
(rule__WHILEExpression__BAssignment_3)*
{ after(grammarAccess.getWHILEExpressionAccess().getBAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WHILEExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WHILEExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WHILEExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWHILEExpressionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getWHILEExpressionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AssignExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignExpression__Group__0__Impl
	rule__AssignExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignExpressionAccess().getGlobalAssignment_0()); }
(rule__AssignExpression__GlobalAssignment_0)
{ after(grammarAccess.getAssignExpressionAccess().getGlobalAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignExpression__Group__1__Impl
	rule__AssignExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignExpressionAccess().getSpaceEqualsSignSpaceKeyword_1()); }

	' = ' 

{ after(grammarAccess.getAssignExpressionAccess().getSpaceEqualsSignSpaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignExpressionAccess().getVAssignment_2()); }
(rule__AssignExpression__VAssignment_2)
{ after(grammarAccess.getAssignExpressionAccess().getVAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForwardAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForwardAction__Group__0__Impl
	rule__ForwardAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardActionAccess().getForwardActionAction_0()); }
(

)
{ after(grammarAccess.getForwardActionAccess().getForwardActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForwardAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForwardAction__Group__1__Impl
	rule__ForwardAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardActionAccess().getForwardKeyword_1()); }

	'Forward' 

{ after(grammarAccess.getForwardActionAccess().getForwardKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForwardAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForwardAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardActionAccess().getMotorAssignment_2()); }
(rule__ForwardAction__MotorAssignment_2)?
{ after(grammarAccess.getForwardActionAccess().getMotorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RotateAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RotateAction__Group__0__Impl
	rule__RotateAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRotateActionAccess().getRotateKeyword_0()); }

	'Rotate' 

{ after(grammarAccess.getRotateActionAccess().getRotateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RotateAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RotateAction__Group__1__Impl
	rule__RotateAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRotateActionAccess().getMotorAssignment_1()); }
(rule__RotateAction__MotorAssignment_1)
{ after(grammarAccess.getRotateActionAccess().getMotorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RotateAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RotateAction__Group__2__Impl
	rule__RotateAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRotateActionAccess().getDegreesAssignment_2()); }
(rule__RotateAction__DegreesAssignment_2)
{ after(grammarAccess.getRotateActionAccess().getDegreesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RotateAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RotateAction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRotateActionAccess().getBlockingAssignment_3()); }
(rule__RotateAction__BlockingAssignment_3)?
{ after(grammarAccess.getRotateActionAccess().getBlockingAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StopAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StopAction__Group__0__Impl
	rule__StopAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StopAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStopActionAccess().getStopActionAction_0()); }
(

)
{ after(grammarAccess.getStopActionAccess().getStopActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StopAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StopAction__Group__1__Impl
	rule__StopAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StopAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStopActionAccess().getStopKeyword_1()); }

	'Stop' 

{ after(grammarAccess.getStopActionAccess().getStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StopAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StopAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StopAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStopActionAccess().getMotorAssignment_2()); }
(rule__StopAction__MotorAssignment_2)?
{ after(grammarAccess.getStopActionAccess().getMotorAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SAccelerationAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SAccelerationAction__Group__0__Impl
	rule__SAccelerationAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SAccelerationAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccelerationActionAccess().getSetAccelerationKeyword_0()); }

	'Set Acceleration' 

{ after(grammarAccess.getSAccelerationActionAccess().getSetAccelerationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SAccelerationAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SAccelerationAction__Group__1__Impl
	rule__SAccelerationAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SAccelerationAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccelerationActionAccess().getMotorAssignment_1()); }
(rule__SAccelerationAction__MotorAssignment_1)?
{ after(grammarAccess.getSAccelerationActionAccess().getMotorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SAccelerationAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SAccelerationAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SAccelerationAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccelerationActionAccess().getVAssignment_2()); }
(rule__SAccelerationAction__VAssignment_2)
{ after(grammarAccess.getSAccelerationActionAccess().getVAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SSpeedAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SSpeedAction__Group__0__Impl
	rule__SSpeedAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SSpeedAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSSpeedActionAccess().getSetSpeedKeyword_0()); }

	'Set Speed' 

{ after(grammarAccess.getSSpeedActionAccess().getSetSpeedKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SSpeedAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SSpeedAction__Group__1__Impl
	rule__SSpeedAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SSpeedAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSSpeedActionAccess().getMotorAssignment_1()); }
(rule__SSpeedAction__MotorAssignment_1)?
{ after(grammarAccess.getSSpeedActionAccess().getMotorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SSpeedAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SSpeedAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SSpeedAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSSpeedActionAccess().getVAssignment_2()); }
(rule__SSpeedAction__VAssignment_2)
{ after(grammarAccess.getSSpeedActionAccess().getVAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubRoutineAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubRoutineAction__Group__0__Impl
	rule__SubRoutineAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubRoutineAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRoutineActionAccess().getDoKeyword_0()); }

	'Do' 

{ after(grammarAccess.getSubRoutineActionAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubRoutineAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubRoutineAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubRoutineAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRoutineActionAccess().getRoutineAssignment_1()); }
(rule__SubRoutineAction__RoutineAssignment_1)
{ after(grammarAccess.getSubRoutineActionAccess().getRoutineAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Blevel1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Blevel1__Group__0__Impl
	rule__Blevel1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel1Access().getBlevel2ParserRuleCall_0()); }
	ruleBlevel2
{ after(grammarAccess.getBlevel1Access().getBlevel2ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Blevel1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Blevel1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel1Access().getGroup_1()); }
(rule__Blevel1__Group_1__0)*
{ after(grammarAccess.getBlevel1Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Blevel1__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Blevel1__Group_1__0__Impl
	rule__Blevel1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel1__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel1Access().getExpressionBinOpLeftAction_1_0()); }
(

)
{ after(grammarAccess.getBlevel1Access().getExpressionBinOpLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Blevel1__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Blevel1__Group_1__1__Impl
	rule__Blevel1__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel1__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel1Access().getBopAssignment_1_1()); }
(rule__Blevel1__BopAssignment_1_1)
{ after(grammarAccess.getBlevel1Access().getBopAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Blevel1__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Blevel1__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel1__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel1Access().getRightAssignment_1_2()); }
(rule__Blevel1__RightAssignment_1_2)
{ after(grammarAccess.getBlevel1Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BNotExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BNotExpr__Group__0__Impl
	rule__BNotExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BNotExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBNotExprAccess().getNOTKeyword_0()); }

	'NOT' 

{ after(grammarAccess.getBNotExprAccess().getNOTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BNotExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BNotExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BNotExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBNotExprAccess().getSubAssignment_1()); }
(rule__BNotExpr__SubAssignment_1)
{ after(grammarAccess.getBNotExprAccess().getSubAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Blevel3__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Blevel3__Group__0__Impl
	rule__Blevel3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel3__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel3Access().getBlevel4ParserRuleCall_0()); }
	ruleBlevel4
{ after(grammarAccess.getBlevel3Access().getBlevel4ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Blevel3__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Blevel3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel3__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel3Access().getGroup_1()); }
(rule__Blevel3__Group_1__0)*
{ after(grammarAccess.getBlevel3Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Blevel3__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Blevel3__Group_1__0__Impl
	rule__Blevel3__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel3__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel3Access().getExpressionBinCompLeftAction_1_0()); }
(

)
{ after(grammarAccess.getBlevel3Access().getExpressionBinCompLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Blevel3__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Blevel3__Group_1__1__Impl
	rule__Blevel3__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel3__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel3Access().getBcompAssignment_1_1()); }
(rule__Blevel3__BcompAssignment_1_1)
{ after(grammarAccess.getBlevel3Access().getBcompAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Blevel3__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Blevel3__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel3__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel3Access().getRightAssignment_1_2()); }
(rule__Blevel3__RightAssignment_1_2)
{ after(grammarAccess.getBlevel3Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BVLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BVLiteral__Group__0__Impl
	rule__BVLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BVLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVLiteralAccess().getNegAssignment_0()); }
(rule__BVLiteral__NegAssignment_0)?
{ after(grammarAccess.getBVLiteralAccess().getNegAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BVLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BVLiteral__Group__1__Impl
	rule__BVLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BVLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVLiteralAccess().getAValueAssignment_1()); }
(rule__BVLiteral__AValueAssignment_1)
{ after(grammarAccess.getBVLiteralAccess().getAValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BVLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BVLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BVLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVLiteralAccess().getGroup_2()); }
(rule__BVLiteral__Group_2__0)?
{ after(grammarAccess.getBVLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BVLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BVLiteral__Group_2__0__Impl
	rule__BVLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BVLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVLiteralAccess().getSolidusKeyword_2_0()); }

	'/' 

{ after(grammarAccess.getBVLiteralAccess().getSolidusKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BVLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BVLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BVLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVLiteralAccess().getFractionAssignment_2_1()); }
(rule__BVLiteral__FractionAssignment_2_1)
{ after(grammarAccess.getBVLiteralAccess().getFractionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BVBracket__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BVBracket__Group__0__Impl
	rule__BVBracket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BVBracket__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVBracketAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getBVBracketAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BVBracket__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BVBracket__Group__1__Impl
	rule__BVBracket__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BVBracket__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVBracketAccess().getBsubAssignment_1()); }
(rule__BVBracket__BsubAssignment_1)
{ after(grammarAccess.getBVBracketAccess().getBsubAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BVBracket__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BVBracket__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BVBracket__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVBracketAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getBVBracketAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Robot__BehaviorOrderAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getBehaviorOrderBehaviorNameParserRuleCall_1_0()); }
	ruleBehaviorName{ after(grammarAccess.getRobotAccess().getBehaviorOrderBehaviorNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__GlobalsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getGlobalsGlobalParserRuleCall_2_1_0()); }
	ruleGlobal{ after(grammarAccess.getRobotAccess().getGlobalsGlobalParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__StaticsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getStaticsStaticParserRuleCall_3_1_0()); }
	ruleStatic{ after(grammarAccess.getRobotAccess().getStaticsStaticParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__StopBehaviourAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getStopBehaviourValueExpressionParserRuleCall_5_0()); }
	ruleValueExpression{ after(grammarAccess.getRobotAccess().getStopBehaviourValueExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__BehaviorsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getBehaviorsImplementationParserRuleCall_6_0()); }
	ruleImplementation{ after(grammarAccess.getRobotAccess().getBehaviorsImplementationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Robot__SubRoutinesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRobotAccess().getSubRoutinesSubRoutineParserRuleCall_7_0()); }
	ruleSubRoutine{ after(grammarAccess.getRobotAccess().getSubRoutinesSubRoutineParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorNameAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getBehaviorNameAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Motor__MAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMotorAccess().getMEMotorEnumRuleCall_0()); }
	ruleEMotor{ after(grammarAccess.getMotorAccess().getMEMotorEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Global__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getGlobalAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Static__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getStaticAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Static__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticAccess().getValueValueExpressionParserRuleCall_2_0()); }
	ruleValueExpression{ after(grammarAccess.getStaticAccess().getValueValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__ForAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getForBehaviorNameCrossReference_1_0()); }
(
{ before(grammarAccess.getImplementationAccess().getForBehaviorNameIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getImplementationAccess().getForBehaviorNameIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getImplementationAccess().getForBehaviorNameCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__ControlCheckAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getControlCheckValueExpressionParserRuleCall_4_0()); }
	ruleValueExpression{ after(grammarAccess.getImplementationAccess().getControlCheckValueExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Implementation__ExpressionsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImplementationAccess().getExpressionsExpressionParserRuleCall_6_0()); }
	ruleExpression{ after(grammarAccess.getImplementationAccess().getExpressionsExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubRoutine__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRoutineAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSubRoutineAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubRoutine__ExpressionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRoutineAccess().getExpressionsExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getSubRoutineAccess().getExpressionsExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValExpr__VExprAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValExprAccess().getVExprValueExpressionParserRuleCall_0()); }
	ruleValueExpression{ after(grammarAccess.getValExprAccess().getVExprValueExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__CAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getCValueExpressionParserRuleCall_1_0()); }
	ruleValueExpression{ after(grammarAccess.getIFExpressionAccess().getCValueExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__TAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getTExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIFExpressionAccess().getTExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IFExpression__EAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIFExpressionAccess().getEExpressionParserRuleCall_5_2_0()); }
	ruleExpression{ after(grammarAccess.getIFExpressionAccess().getEExpressionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WHILEExpression__CAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWHILEExpressionAccess().getCValueExpressionParserRuleCall_1_0()); }
	ruleValueExpression{ after(grammarAccess.getWHILEExpressionAccess().getCValueExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WHILEExpression__BAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWHILEExpressionAccess().getBExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getWHILEExpressionAccess().getBExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignExpression__GlobalAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignExpressionAccess().getGlobalGlobalCrossReference_0_0()); }
(
{ before(grammarAccess.getAssignExpressionAccess().getGlobalGlobalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAssignExpressionAccess().getGlobalGlobalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssignExpressionAccess().getGlobalGlobalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignExpression__VAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignExpressionAccess().getVValueExpressionParserRuleCall_2_0()); }
	ruleValueExpression{ after(grammarAccess.getAssignExpressionAccess().getVValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForwardAction__MotorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForwardActionAccess().getMotorMotorParserRuleCall_2_0()); }
	ruleMotor{ after(grammarAccess.getForwardActionAccess().getMotorMotorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAction__MotorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRotateActionAccess().getMotorMotorParserRuleCall_1_0()); }
	ruleMotor{ after(grammarAccess.getRotateActionAccess().getMotorMotorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAction__DegreesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRotateActionAccess().getDegreesValueExpressionParserRuleCall_2_0()); }
	ruleValueExpression{ after(grammarAccess.getRotateActionAccess().getDegreesValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RotateAction__BlockingAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRotateActionAccess().getBlockingWaitKeyword_3_0()); }
(
{ before(grammarAccess.getRotateActionAccess().getBlockingWaitKeyword_3_0()); }

	'wait' 

{ after(grammarAccess.getRotateActionAccess().getBlockingWaitKeyword_3_0()); }
)

{ after(grammarAccess.getRotateActionAccess().getBlockingWaitKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StopAction__MotorAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStopActionAccess().getMotorMotorParserRuleCall_2_0()); }
	ruleMotor{ after(grammarAccess.getStopActionAccess().getMotorMotorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SAccelerationAction__MotorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccelerationActionAccess().getMotorMotorParserRuleCall_1_0()); }
	ruleMotor{ after(grammarAccess.getSAccelerationActionAccess().getMotorMotorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SAccelerationAction__VAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSAccelerationActionAccess().getVValueExpressionParserRuleCall_2_0()); }
	ruleValueExpression{ after(grammarAccess.getSAccelerationActionAccess().getVValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SSpeedAction__MotorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSSpeedActionAccess().getMotorMotorParserRuleCall_1_0()); }
	ruleMotor{ after(grammarAccess.getSSpeedActionAccess().getMotorMotorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SSpeedAction__VAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSSpeedActionAccess().getVValueExpressionParserRuleCall_2_0()); }
	ruleValueExpression{ after(grammarAccess.getSSpeedActionAccess().getVValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubRoutineAction__RoutineAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubRoutineActionAccess().getRoutineSubRoutineCrossReference_1_0()); }
(
{ before(grammarAccess.getSubRoutineActionAccess().getRoutineSubRoutineIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSubRoutineActionAccess().getRoutineSubRoutineIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSubRoutineActionAccess().getRoutineSubRoutineCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel1__BopAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel1Access().getBopBBinaryOpEnumRuleCall_1_1_0()); }
	ruleBBinaryOp{ after(grammarAccess.getBlevel1Access().getBopBBinaryOpEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel1__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel1Access().getRightBlevel2ParserRuleCall_1_2_0()); }
	ruleBlevel2{ after(grammarAccess.getBlevel1Access().getRightBlevel2ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BNotExpr__SubAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBNotExprAccess().getSubBlevel3ParserRuleCall_1_0()); }
	ruleBlevel3{ after(grammarAccess.getBNotExprAccess().getSubBlevel3ParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel3__BcompAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel3Access().getBcompCompareOpEnumRuleCall_1_1_0()); }
	ruleCompareOp{ after(grammarAccess.getBlevel3Access().getBcompCompareOpEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Blevel3__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlevel3Access().getRightBlevel4ParserRuleCall_1_2_0()); }
	ruleBlevel4{ after(grammarAccess.getBlevel3Access().getRightBlevel4ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BVLiteral__NegAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVLiteralAccess().getNegNegKeyword_0_0()); }
(
{ before(grammarAccess.getBVLiteralAccess().getNegNegKeyword_0_0()); }

	'neg' 

{ after(grammarAccess.getBVLiteralAccess().getNegNegKeyword_0_0()); }
)

{ after(grammarAccess.getBVLiteralAccess().getNegNegKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BVLiteral__AValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVLiteralAccess().getAValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getBVLiteralAccess().getAValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BVLiteral__FractionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVLiteralAccess().getFractionINTTerminalRuleCall_2_1_0()); }
	RULE_INT{ after(grammarAccess.getBVLiteralAccess().getFractionINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BBLiteral__BValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBBLiteralAccess().getBValueBOOL_LITERALTerminalRuleCall_0()); }
	RULE_BOOL_LITERAL{ after(grammarAccess.getBBLiteralAccess().getBValueBOOL_LITERALTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BVarLiteral__VarAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVarLiteralAccess().getVarIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getBVarLiteralAccess().getVarIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BSensorLiteral__SensorAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBSensorLiteralAccess().getSensorSensorEnumRuleCall_0()); }
	ruleSensor{ after(grammarAccess.getBSensorLiteralAccess().getSensorSensorEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BVBracket__BsubAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBVBracketAccess().getBsubValueExpressionParserRuleCall_1_0()); }
	ruleValueExpression{ after(grammarAccess.getBVBracketAccess().getBsubValueExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ALPHA : 'A'..'Z';

RULE_BOOL_LITERAL : ('True'|'False'|'TRUE'|'FALSE');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


